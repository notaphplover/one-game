apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: one-game
data:
  nginx.conf: |-
    events {}

    http {
      server {
        listen 8000;

        resolver kube-dns.kube-system.svc.cluster.local ipv6=off;

        include conf.d/locations.conf;
      }
    }
    

  conf.d.locations.conf: |-
    location /v1/auth {
      include conf.d/redirect-headers.conf;
      include conf.d/http-user-service-auth-redirection.conf;
    }

    location /v1/events/games {
      include conf.d/redirect-headers.conf;
      include conf.d/http-game-service-game-events-redirection.conf;
    }

    location /v1/games {
      include conf.d/redirect-headers.conf;
      include conf.d/http-game-service-game-redirection.conf;
    }

    location /v1/users {
      include conf.d/redirect-headers.conf;
      include conf.d/http-user-service-user-redirection.conf;
    }
    

  conf.d.redirect-headers.conf: |-
    proxy_set_header    X-Real-IP           $remote_addr;
    proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
    proxy_set_header    X-Forwarded-Proto   $scheme;
    proxy_set_header    Host                $host;
    proxy_set_header    X-Forwarded-Host    $host;
    proxy_set_header    X-Forwarded-Port    $server_port;
    

  templates.http-game-service-game-events-redirection.conf.template: |-
    proxy_http_version 1.1;
    proxy_pass ${GAME_SERVICE_BASE_URL}/v1/events/games;
    

  templates.http-game-service-game-redirection.conf.template: |-
    proxy_http_version 1.1;
    proxy_pass ${GAME_SERVICE_BASE_URL}/v1/games;
    

  templates.http-user-service-auth-redirection.conf.template: |-
    proxy_http_version 1.1;
    proxy_pass ${USER_SERVICE_BASE_URL}/v1/auth;
    

  templates.http-user-service-user-redirection.conf.template: |-
    proxy_http_version 1.1;
    proxy_pass ${USER_SERVICE_BASE_URL}/v1/users;
    

  env.USER_SERVICE_BASE_URL: http://rest-service-user:3001
  env.GAME_SERVICE_BASE_URL: http://rest-service-game:3002
