openapi: 3.1.0
info:
  title: One game API
  version: '1.0'
servers:
  - url: 'http://127.0.0.1:8000'
    description: Local development server
  - url: 'http://api.cornie.game'
    description: Production server
components:
  securitySchemes:
    accessToken:
      type: http
      scheme: bearer
      bearerFormat: JWT
    refreshToken:
      type: http
      scheme: bearer
      bearerFormat: JWT

paths:
  /v1/games:
    get:
      summary: Get games
      operationId: getGames
      parameters:
        - in: query
          name: isPublic
          required: false
          schema:
            type: boolean
          description: visibility of the games to be found
        - in: query
          name: status
          required: false
          schema:
            type: string
          description: status of the games to be found
        - in: query
          name: page
          required: false
          schema:
            minimum: 1
            type: number
          description: pagination number
        - in: query
          name: pageSize
          required: false
          schema:
            maximum: 50
            minimum: 1
            type: number
          description: pagination size
      responses:
        '200':
          description: Games found
          content:
            application/json:
              schema:
                $ref: 'https://onegame.schemas/api/v1/games/game-array.json'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: 'https://onegame.schemas/api/v1/errors/error.json'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: 'https://onegame.schemas/api/v1/errors/error.json'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: 'https://onegame.schemas/api/v1/errors/error.json'
      security:
        - accessToken: []
      tags:
        - Game

    post:
      summary: Create a game
      operationId: createGame
      requestBody:
        content:
          application/json:
            schema:
              $ref: 'https://onegame.schemas/api/v1/games/game-create-query.json'
        required: true
      responses:
        '200':
          description: Game created
          content:
            application/json:
              schema:
                $ref: 'https://onegame.schemas/api/v1/games/non-started-game.json'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: 'https://onegame.schemas/api/v1/errors/error.json'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: 'https://onegame.schemas/api/v1/errors/error.json'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: 'https://onegame.schemas/api/v1/errors/error.json'
      security:
        - accessToken: []
      tags:
        - Game

  /v1/games/mine:
    get:
      summary: Get games I joined
      operationId: getGamesMine
      parameters:
        - in: query
          name: status
          required: false
          schema:
            type: string
          description: status of the games to be found
        - in: query
          name: page
          required: false
          schema:
            minimum: 1
            type: number
          description: pagination number
        - in: query
          name: pageSize
          required: false
          schema:
            maximum: 50
            minimum: 1
            type: number
          description: pagination size
      responses:
        '200':
          description: Games found
          content:
            application/json:
              schema:
                $ref: 'https://onegame.schemas/api/v1/games/game-array.json'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: 'https://onegame.schemas/api/v1/errors/error.json'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: 'https://onegame.schemas/api/v1/errors/error.json'
      security:
        - accessToken: []
      tags:
        - Game

  /v1/games/{gameId}:
    get:
      summary: Get a game
      operationId: getGame
      parameters:
        - in: path
          name: gameId
          schema:
            type: string
          required: true
          description: Id of the game to get
      responses:
        '200':
          description: Game found
          content:
            application/json:
              schema:
                $ref: 'https://onegame.schemas/api/v1/games/game.json'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: 'https://onegame.schemas/api/v1/errors/error.json'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: 'https://onegame.schemas/api/v1/errors/error.json'
        '404':
          description: Game not found
          content:
            application/json:
              schema:
                $ref: 'https://onegame.schemas/api/v1/errors/error.json'
      security:
        - accessToken: []
      tags:
        - Game
    patch:
      summary: Update a game
      operationId: updateGame
      parameters:
        - in: path
          name: gameId
          schema:
            type: string
          required: true
          description: Id of the game to update
      requestBody:
        content:
          application/json:
            schema:
              $ref: 'https://onegame.schemas/api/v1/games/game-id-update-query.json'
        required: true
      responses:
        '200':
          description: Game updated
          content:
            application/json:
              schema:
                $ref: 'https://onegame.schemas/api/v1/games/game.json'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: 'https://onegame.schemas/api/v1/errors/error.json'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: 'https://onegame.schemas/api/v1/errors/error.json'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: 'https://onegame.schemas/api/v1/errors/error.json'
        '404':
          description: Game not found
          content:
            application/json:
              schema:
                $ref: 'https://onegame.schemas/api/v1/errors/error.json'
        '422':
          description: Unprocessable operation
          content:
            application/json:
              schema:
                $ref: 'https://onegame.schemas/api/v1/errors/error.json'
      security:
        - accessToken: []
      tags:
        - Game

  /v1/games/{gameId}/specs:
    get:
      summary: Get a game spec
      operationId: getGameGameIdSpec
      parameters:
        - in: path
          name: gameId
          schema:
            type: string
          required: true
          description: Game id
      responses:
        '200':
          description: Game spec found
          content:
            application/json:
              schema:
                $ref: 'https://onegame.schemas/api/v1/games/game-spec.json'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: 'https://onegame.schemas/api/v1/errors/error.json'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: 'https://onegame.schemas/api/v1/errors/error.json'
        '404':
          description: Game not found
          content:
            application/json:
              schema:
                $ref: 'https://onegame.schemas/api/v1/errors/error.json'
      security:
        - accessToken: []
      tags:
        - Game

  /v1/games/specs:
    get:
      summary: Get game specs
      operationId: getGamesSpecs
      parameters:
        - in: query
          name: gameId
          explode: true
          schema:
            type: array
            items:
              type: string
          required: false
          style: form
          description: Game id
        - in: query
          name: page
          required: false
          schema:
            minimum: 1
            type: number
          description: pagination number
        - in: query
          name: pageSize
          required: false
          schema:
            maximum: 50
            minimum: 1
            type: number
          description: pagination size
        - in: query
          name: sort
          required: false
          schema:
            $ref: https://onegame.schemas/api/v1/games/game-spec-sort-option.json
      responses:
        '200':
          description: Game specs found
          content:
            application/json:
              schema:
                $ref: 'https://onegame.schemas/api/v1/games/game-spec-array.json'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: 'https://onegame.schemas/api/v1/errors/error.json'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: 'https://onegame.schemas/api/v1/errors/error.json'
      security:
        - accessToken: []
      tags:
        - Game

  /v1/games/{gameId}/slots:
    post:
      summary: Create a game slot
      operationId: createGameSlot
      requestBody:
        content:
          application/json:
            schema:
              $ref: 'https://onegame.schemas/api/v1/games/game-id-slot-create-query.json'
        required: true
      parameters:
        - in: path
          name: gameId
          schema:
            type: string
          required: true
          description: Id of the game containing the game slot to create
      responses:
        '200':
          description: Game slot created
          content:
            application/json:
              schema:
                $ref: 'https://onegame.schemas/api/v1/games/game-slot.json'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: 'https://onegame.schemas/api/v1/errors/error.json'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: 'https://onegame.schemas/api/v1/errors/error.json'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: 'https://onegame.schemas/api/v1/errors/error.json'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: 'https://onegame.schemas/api/v1/errors/error.json'
        '422':
          description: Unprocessable request
          content:
            application/json:
              schema:
                $ref: 'https://onegame.schemas/api/v1/errors/error.json'
      security:
        - accessToken: []
      tags:
        - Game

  /v1/games/{gameId}/slots/{gameSlotIndex}/cards:
    get:
      summary: Get a game slot cards
      operationId: getGameSlotCards
      parameters:
        - in: path
          name: gameId
          schema:
            type: string
          required: true
          description: Id of the game containing the game slot to get
        - in: path
          name: gameSlotIndex
          schema:
            type: integer
          required: true
          description: Index of the game slot to get
      responses:
        '200':
          description: Game slot cards found
          content:
            application/json:
              schema:
                $ref: 'https://onegame.schemas/api/v1/games/active-game-slot-cards.json'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: 'https://onegame.schemas/api/v1/errors/error.json'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: 'https://onegame.schemas/api/v1/errors/error.json'
        '422':
          description: Game slot cards not processable
          content:
            application/json:
              schema:
                $ref: 'https://onegame.schemas/api/v1/errors/error.json'
      security:
        - accessToken: []
      tags:
        - Game

  /v1/users:
    post:
      summary: Create user
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: 'https://onegame.schemas/api/v1/users/user-create-query.json'
        required: true
      responses:
        '200':
          description: User created
          content:
            application/json:
              schema:
                $ref: 'https://onegame.schemas/api/v1/users/user.json'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: 'https://onegame.schemas/api/v1/errors/error.json'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: 'https://onegame.schemas/api/v1/errors/error.json'
      security: []
      tags:
        - User
    get:
      summary: Get users
      description: |
        Gets users given some filters.

        If "sort" is provided, then results are filtered by ids respecting the order in which those ids were provided in the query.
        If no user is found for a certain id, a null value is provided instead.
      operationId: getUsers
      parameters:
        - in: query
          name: id
          explode: true
          schema:
            type: array
            items:
              type: string
          required: false
          style: form
          description: id
        - in: query
          name: page
          required: false
          schema:
            minimum: 1
            type: number
          description: pagination number
        - in: query
          name: pageSize
          required: false
          schema:
            maximum: 50
            minimum: 1
            type: number
          description: pagination size
        - in: query
          name: sort
          required: false
          schema:
            $ref: https://onegame.schemas/api/v1/users/user-sort-option.json
      responses:
        '200':
          description: Users found
          content:
            application/json:
              schema:
                $ref: 'https://onegame.schemas/api/v1/users/maybe-user-array.json'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: 'https://onegame.schemas/api/v1/errors/error.json'
        '403':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: 'https://onegame.schemas/api/v1/errors/error.json'
      security:
        - accessToken: []
      tags:
        - User

  /v1/users/email/{email}/code:
    delete:
      summary: Delete user code
      operationId: deleteUserByEmailCode
      parameters:
        - in: path
          name: email
          schema:
            type: string
          required: true
          description: Email of the user whose code is being deleted
      responses:
        '200':
          description: User deleted
        '422':
          description: Unprocessable operation
          content:
            application/json:
              schema:
                $ref: 'https://onegame.schemas/api/v1/errors/error.json'
      tags:
        - User
    post:
      summary: Create user code
      operationId: createUserByEmailCode
      parameters:
        - in: path
          name: email
          schema:
            type: string
          required: true
          description: Email of the user whose code is being deleted
      requestBody:
        content:
          application/json:
            schema:
              $ref: 'https://onegame.schemas/api/v1/users/user-code-create-query.json'
        required: false
      responses:
        '201':
          description: User code created
        '409':
          description: Entity conflict. This is likely to happen due to the existence of another code for this user.
          content:
            application/json:
              schema:
                $ref: 'https://onegame.schemas/api/v1/errors/error.json'
        '422':
          description: Unprocessable operation. This is likely to happen if the kind of request cannot be accepted for the user given its current state.
          content:
            application/json:
              schema:
                $ref: 'https://onegame.schemas/api/v1/errors/error.json'
      tags:
        - User

  /v1/users/me:
    delete:
      summary: Delete user me
      operationId: deleteUserMe
      responses:
        '200':
          description: User deleted
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: 'https://onegame.schemas/api/v1/errors/error.json'
      security:
        - accessToken: []
      tags:
        - User

    get:
      summary: Get current user
      operationId: getUserMe
      responses:
        '200':
          description: User found
          content:
            application/json:
              schema:
                $ref: 'https://onegame.schemas/api/v1/users/user.json'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: 'https://onegame.schemas/api/v1/errors/error.json'
        '403':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: 'https://onegame.schemas/api/v1/errors/error.json'
      security:
        - accessToken: []
      tags:
        - User
    patch:
      summary: Update user me
      operationId: updateUserMe
      requestBody:
        content:
          application/json:
            schema:
              $ref: 'https://onegame.schemas/api/v1/users/user-me-update-query.json'
        required: true
      responses:
        '200':
          description: User updated
          content:
            application/json:
              schema:
                $ref: 'https://onegame.schemas/api/v1/users/user.json'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: 'https://onegame.schemas/api/v1/errors/error.json'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: 'https://onegame.schemas/api/v1/errors/error.json'
      security:
        - accessToken: []
      tags:
        - User

  /v1/users/me/detail:
    get:
      summary: Get current user detail
      operationId: getUserMeDetail
      responses:
        '200':
          description: User detail found
          content:
            application/json:
              schema:
                $ref: 'https://onegame.schemas/api/v1/users/user-detail.json'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: 'https://onegame.schemas/api/v1/errors/error.json'
        '403':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: 'https://onegame.schemas/api/v1/errors/error.json'
      security:
        - accessToken: []
      tags:
        - User

  /v1/users/{userId}:
    get:
      summary: Get a user by ID
      operationId: getUser
      parameters:
        - in: path
          name: userId
          schema:
            type: string
          required: true
          description: Id of the user to get
      responses:
        '200':
          description: User found
          content:
            application/json:
              schema:
                $ref: 'https://onegame.schemas/api/v1/users/user.json'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: 'https://onegame.schemas/api/v1/errors/error.json'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: 'https://onegame.schemas/api/v1/errors/error.json'
      security:
        - accessToken: []
      tags:
        - User

  /v2/auth:
    post:
      summary: Create an authorization token
      operationId: createAuthV2
      requestBody:
        content:
          application/json:
            examples:
              authByCode:
                summary: User code
                value:
                  code: 0077df18851946fb67e552b83f34d58283548c38c4c5f144e6b655280b773528
                  kind: code
              authByLogin:
                summary: User credentials
                value:
                  email: mail@example.com
                  kind: login
                  password: sample-password
            schema:
              $ref: 'https://onegame.schemas/api/v2/auth/auth-create-query.json'
        required: false
      responses:
        '200':
          description: Authorization token created
          content:
            application/json:
              schema:
                $ref: 'https://onegame.schemas/api/v2/auth/auth.json'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: 'https://onegame.schemas/api/v1/errors/error.json'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: 'https://onegame.schemas/api/v1/errors/error.json'
      security:
        - {}
        - refreshToken: []
      tags:
        - Auth

  /v2/events/games/{gameId}:
    get:
      summary: Get game events (SSE)
      operationId: getGameEventsV2
      parameters:
        - in: path
          name: gameId
          schema:
            type: string
          required: true
          description: Game id of the events to get.
      responses:
        '200':
          description: Game events found
          content:
            text/event-stream:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    data:
                      $ref: 'https://onegame.schemas/api/v2/game-events/game-event.json'
                  required:
                    - id
                    - data
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: 'https://onegame.schemas/api/v1/errors/error.json'
      security:
        - accessToken: []
      tags:
        - Game events

tags:
  - name: Auth
    description: Authorization management operations
  - name: Game
    description: Game management operations
  - name: Game events
    description: Game events management operations
  - name: User
    description: User management operations
